### STAGE 1
partition_uuid(){
BOOT_UUID=$(blkid -o export -- "${IMAGE_LOOP_DEV_BOOT}" | sed -ne 's/^UUID=//p')
ROOT_UUID=$(blkid -o export -- "${IMAGE_LOOP_DEV_ROOTFS}" | sed -ne 's/^UUID=//p')
ROOT_PARTUUID=$(blkid -o export -- "${IMAGE_LOOP_DEV_ROOTFS}" | sed -ne 's/^PARTUUID=//p')

echo BOOT_UUID='"'$BOOT_UUID'"' > part-uuid.txt
echo ROOT_UUID='"'$ROOT_UUID'"' >> part-uuid.txt
echo ROOT_PARTUUID='"'$ROOT_PARTUUID'"' >> part-uuid.txt

source part-uuid.txt
}

cmdline(){
tee p1/cmdline.txt <<EOF
console=serial0,115200 console=tty1 root=PARTUUID=${ROOT_PARTUUID} rootfstype=ext4 elevator=deadline fsck.repair=yes logo.nologo net.ifnames=0 rootwait
EOF
}

bcm2711_config(){
tee p1/config.txt <<EOF
arm_64bit=1
kernel=kernel8.img

# For more options and information see
# http://rpf.io/configtxt
# Some settings may impact device functionality. See link above for details

# uncomment if you get no picture on HDMI for a default "safe" mode
#hdmi_safe=1

# uncomment this if your display has a black border of unused pixels visible
# and your display can output without overscan
disable_overscan=1

# uncomment the following to adjust overscan. Use positive numbers if console
# goes off screen, and negative if there is too much border
#overscan_left=16
#overscan_right=16
#overscan_top=16
#overscan_bottom=16

# uncomment to force a console size. By default it will be display's size minus
# overscan.
#framebuffer_width=1280
#framebuffer_height=720

### uncomment to set display to 1024x768
#overscan_left=0
#overscan_right=0
#overscan_top=0
#overscan_bottom=0

#framebuffer_width=1024
#framebuffer_height=768
#framebuffer_depth=16

#hdmi_group=2
#hdmi_mode=16

# uncomment if hdmi display is not detected and composite is being output
#hdmi_force_hotplug=1

# uncomment to force a specific HDMI mode (this will force VGA)
#hdmi_group=1
#hdmi_mode=1

# uncomment to force a HDMI mode rather than DVI. This can make audio work in
# DMT (computer monitor) modes
#hdmi_drive=2

# uncomment to increase signal to HDMI, if you have interference, blanking, or
# no display
#config_hdmi_boost=4

# uncomment for composite PAL
#sdtv_mode=2

# camera
#start_x=1
gpu_mem=128

# uncomment to overclock the arm. 700 MHz is the default.
#arm_freq=800

# uncomment some or all of these to enable the optional hardware interfaces
#dtparam=i2c_arm=on
#dtparam=i2s=on
#dtparam=spi=on

# uncomment this to enable infrared communication.
#dtoverlay=gpio-ir,gpio_pin=17
#dtoverlay=gpio-ir-tx,gpio_pin=18

# additional overlays and parameters are documented /boot/overlays/README

# enable audio (loads snd_bcm2835)
dtparam=audio=on

# enable uart
enable_uart=0

# Disable wifi and bluetooth
#dtoverlay=disable-wifi
#dtoverlay=disable-bt

# Remove test rainbow
disable_splash=1

[pi4]
# enable DRM VC4 V3D driver on top of the dispmanx display stack
dtoverlay=vc4-fkms-v3d
max_framebuffers=2
EOF
}

bcm2710_config(){
tee p1/config.txt <<EOF
arm_64bit=1
kernel=kernel8.img

# For more options and information see
# http://rpf.io/configtxt
# Some settings may impact device functionality. See link above for details

# uncomment if you get no picture on HDMI for a default "safe" mode
#hdmi_safe=1

# uncomment this if your display has a black border of unused pixels visible
# and your display can output without overscan
disable_overscan=1

# uncomment the following to adjust overscan. Use positive numbers if console
# goes off screen, and negative if there is too much border
#overscan_left=16
#overscan_right=16
#overscan_top=16
#overscan_bottom=16

# uncomment to force a console size. By default it will be display's size minus
# overscan.
#framebuffer_width=1280
#framebuffer_height=720

### uncomment to set display to 1024x768
#overscan_left=0
#overscan_right=0
#overscan_top=0
#overscan_bottom=0

#framebuffer_width=1024
#framebuffer_height=768
#framebuffer_depth=16

#hdmi_group=2
#hdmi_mode=16

# uncomment if hdmi display is not detected and composite is being output
#hdmi_force_hotplug=1

# uncomment to force a specific HDMI mode (this will force VGA)
#hdmi_group=1
#hdmi_mode=1

# uncomment to force a HDMI mode rather than DVI. This can make audio work in
# DMT (computer monitor) modes
#hdmi_drive=2

# uncomment to increase signal to HDMI, if you have interference, blanking, or
# no display
#config_hdmi_boost=4

# uncomment for composite PAL
#sdtv_mode=2

# camera
#start_x=1
gpu_mem=128

# uncomment to overclock the arm. 700 MHz is the default.
#arm_freq=800

# uncomment some or all of these to enable the optional hardware interfaces
#dtparam=i2c_arm=on
#dtparam=i2s=on
#dtparam=spi=on

# uncomment this to enable infrared communication.
#dtoverlay=gpio-ir,gpio_pin=17
#dtoverlay=gpio-ir-tx,gpio_pin=18

# additional overlays and parameters are documented /boot/overlays/README

# enable audio (loads snd_bcm2835)
dtparam=audio=on

# enable uart
enable_uart=0

# Disable wifi and bluetooth
#dtoverlay=pi3-disable-wifi
#dtoverlay=pi3-disable-bt

# Remove test rainbow
disable_splash=1
EOF
}

rpi4_bootbins(){
mkdir -p firmware/boot
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup4.dat
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup4cd.dat
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup4db.dat
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup4x.dat
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start4.elf
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start4cd.elf
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start4db.elf
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start4x.elf
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/LICENCE.broadcom
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/COPYING.linux

install -v -m 0644 firmware/boot/fixup4*.dat p1/
install -v -m 0644 firmware/boot/start4*.elf p1/
install -v -m 0644 firmware/boot/LICENCE.broadcom p1/
install -v -m 0644 firmware/boot/COPYING.linux p1/
}

rpi_bootbins(){
mkdir -p firmware/boot
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/bootcode.bin
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup.dat
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup_cd.dat
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup_db.dat
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup_x.dat
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start.elf
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start_cd.elf
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start_db.elf
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start_x.elf
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/LICENCE.broadcom
wget -c -q -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/COPYING.linux

install -v -m 0644 firmware/boot/bootcode.bin p1/
install -v -m 0644 firmware/boot/fixup*.dat p1/
install -v -m 0644 firmware/boot/start*.elf p1/
install -v -m 0644 firmware/boot/LICENCE.broadcom p1/
install -v -m 0644 firmware/boot/COPYING.linux p1/
}

aarch64_rootfs(){
tar -xf debian-${DEBIAN_VERSION}-rootfs-aarch64.tar.xz -C p2/
}

### STAGE 2

# USER CONFIG
bcm2710_user(){
echo -n 'musicbox' > /etc/hostname
sed -i '1 a 127.0.1.1	musicbox' /etc/hosts
adduser ${user} --gecos ${user^} --disabled-password
}

bcm2711_user(){
echo -n 'musicbox' > /etc/hostname
sed -i '1 a 127.0.1.1	musicbox' /etc/hosts
adduser ${user} --gecos ${user^} --disabled-password
}

user_config(){
case `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null; echo $?` in
  0)
	bcm2711_user
    ;;
esac
case `grep -Fx "bcm2710" "/root/soc.txt" >/dev/null; echo $?` in
  0)
	bcm2710_user
    ;;
esac

echo "${user}:${passwd}" | chpasswd
adduser ${user} sudo
adduser ${user} audio
adduser ${user} dialout
adduser ${user} video
adduser ${user} disk
groupadd spi
groupadd i2c
groupadd gpio
adduser ${user} spi
adduser ${user} i2c
adduser ${user} gpio
adduser ${user} plugdev
adduser ${user} netdev
adduser ${user} bluetooth
adduser ${user} input
adduser ${user} tty

echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mkdir -p /home/${user}/.config/mc
mv -f user-ini /home/${user}/.config/mc/ini
mv -f nanorc-user /home/${user}/.nanorc
chown -R root:root /root
chown -R ${user}:${user} /home/${user}
echo Done.

echo
echo Adding patiobar bins
unzip -qq user-bin.zip -d /home/${user}/
rm -f user-bin.zip
chmod +x /home/${user}/bin/*
chown -R ${user}:${user} /home/${user}
echo Done.

echo
echo Creating sudoers file.
sleep 1s
rm -f /etc/sudoers.d/010_pi-nopasswd
tee /etc/sudoers.d/010_${user}-nopasswd <<EOF
${user} ALL=(ALL) NOPASSWD: ALL
EOF
echo Done.

rm -f username.txt
rm -f whogoesthere
chown -R ${user}:${user} /home/${user}
}

# ADMIN CONFIG
bcm2710_admin(){
echo -n 'musicbox' > /etc/hostname
sed -i '1 a 127.0.1.1	musicbox' /etc/hosts
}

bcm2711_admin(){
echo -n 'musicbox' > /etc/hostname
sed -i '1 a 127.0.1.1	musicbox' /etc/hosts
}

admin_config(){
case `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null; echo $?` in
  0)
	bcm2711_admin
    ;;
esac
case `grep -Fx "bcm2710" "/root/soc.txt" >/dev/null; echo $?` in
  0)
	bcm2710_admin
    ;;
esac

groupadd spi
groupadd i2c
groupadd gpio

echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mv -f user-ini /etc/opt/user-ini
mv -f nanorc-user /etc/opt/nanorc-user
chown -R root:root /root
echo Done.

mv -f user-bin.zip /etc/opt/
mv -f username.txt /boot/
mv -f whogoesthere /usr/local/bin/
chmod +x /usr/local/bin/whogoesthere
chown -R root:root /usr/local/bin/whogoesthere
}

user_eeprom(){
echo
echo Adding user eeprom config.
tee /home/${user}/.eeprom <<EOF
# EEPROM CONFIG
## https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/
EEPROM_VERSION="${EEPROM_VERSION}"
EOF
chown ${user}:${user} /home/${user}/.eeprom
}

admin_eeprom(){
echo
echo Adding user eeprom config.
tee /etc/opt/eeprom <<EOF
# EEPROM CONFIG
## https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/
EEPROM_VERSION="${EEPROM_VERSION}"
EOF
chown root:root /etc/opt/eeprom
}

eeprom_choose(){
case `grep -Fx "admin=1" "/root/userdata.txt" >/dev/null; echo $?` in
  0)
	admin_eeprom
    ;;
  1)
	user_eeprom
    ;;
esac
}

bcm_sdio_3-b-plus(){
wget -cq --show-progress https://raw.githubusercontent.com/openwrt/cypress-nvram/master/brcmfmac43455-sdio.raspberrypi%2C3-model-b-plus.txt
}

bcm_sdio_4-b(){
wget -cq --show-progress https://raw.githubusercontent.com/openwrt/cypress-nvram/master/brcmfmac43455-sdio.raspberrypi%2C4-model-b.txt
}

bcm2711_network(){
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
mv -f credentials.txt /boot/rename_to_credentials.txt
cp -f soc.txt /etc/opt/
chown root:root /etc/opt/soc.txt

tee /etc/opt/interfaces.manual <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/interfaces <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	wlan_address 10.0.0.10
	wlan_netmask 255.255.255.0
	wlan_gateway 10.0.0.1
	wlan_dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/wpa_supplicant.manual <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=US

network={
	ssid="mywifissid"
	scan_ssid=1
	key_mgmt=WPA-PSK
	psk="wifipasskey"
}
EOF

tee /etc/opt/wpa_supplicant.conf <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=

network={
	name=
	scan_ssid=1
	key_mgmt=WPA-PSK
	password=
}
EOF
echo Done.
}

bcm2710_network(){
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
mv -f credentials.txt /boot/rename_to_credentials.txt
cp -f soc.txt /etc/opt/
chown root:root /etc/opt/soc.txt

tee /etc/opt/interfaces.manual <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/interfaces <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	wlan_address 10.0.0.10
	wlan_netmask 255.255.255.0
	wlan_gateway 10.0.0.1
	wlan_dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/wpa_supplicant.manual <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=US

network={
	ssid="mywifissid"
	scan_ssid=1
	key_mgmt=WPA-PSK
	psk="wifipasskey"
}
EOF

tee /etc/opt/wpa_supplicant.conf <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=

network={
	name=
	scan_ssid=1
	key_mgmt=WPA-PSK
	password=
}
EOF
echo Done.
}

bcm2710_cypress(){
echo
echo Adding brcm firmware from cypress.
sleep 1s
mkdir cypress
cd cypress
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/cypress-fmac-v4.14.77-2020_0115.zip
unzip -qq cypress-fmac-v4.14.77-2020_0115.zip
tar -xf cypress-firmware-v4.14.77-2020_0115.tar.gz
#rm -f firmware/*pcie*
cp -f firmware/* /lib/firmware/brcm/
cd ~
rm -fdr cypress
echo Done.
}

bluez_stable(){
BLUEZ_VERSION="5.55"
echo
echo Upgrading bluetooth.
sleep 1s
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/bluez-${BLUEZ_VERSION}-debian-arm64.tar.xz
tar xf bluez-${BLUEZ_VERSION}-debian-arm64.tar.xz
rm -f bluez-${BLUEZ_VERSION}-debian-arm64.tar.xz
cd bluez-${BLUEZ_VERSION}-debian-arm64
rm -f *dbgsym_${BLUEZ_VERSION}*
rm -f *cups_${BLUEZ_VERSION}*
rm -f *source_${BLUEZ_VERSION}*
dpkg -i *.deb
cd ..
rm -fdR bluez-${BLUEZ_VERSION}-debian-arm64
apt-mark hold bluez
echo Done.
}

bluez_unstable(){
BLUEZ_UNSTABLE_VERSION="5.55"
echo
echo Upgrading bluetooth.
sleep 1s
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/bluez-${BLUEZ_UNSTABLE_VERSION}-debian-unstable-arm64.tar.xz
tar xf bluez-${BLUEZ_UNSTABLE_VERSION}-debian-unstable-arm64.tar.xz
rm -f bluez-${BLUEZ_UNSTABLE_VERSION}-debian-unstable-arm64.tar.xz
cd bluez-${BLUEZ_UNSTABLE_VERSION}-debian-unstable-arm64
rm -f *dbgsym_${BLUEZ_UNSTABLE_VERSION}*
rm -f *cups_${BLUEZ_UNSTABLE_VERSION}*
rm -f *source_${BLUEZ_UNSTABLE_VERSION}*
dpkg -i *.deb
cd ..
rm -fdR bluez-${BLUEZ_UNSTABLE_VERSION}-debian-unstable-arm64
apt-mark hold bluez
echo Done.
}

bluez_choose(){
case `grep -Fx 'DEBIAN_VERSION="unstable"' "/root/userdata.txt" >/dev/null; echo $?` in
  0)
	bluez_unstable
    ;;
  1)
	bluez_stable
    ;;
esac
}

bcm2711_eeprom(){
echo
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
echo Checking for updates.
apt update
echo
echo Installing rpi-eeprom.
sleep 1s
apt install help2man rsync pciutils -y
###
mkdir -p ~/eeprom
mkdir -p /usr/local/src
cp -f rpi-eeprom-update.patch /usr/local/src/
mv -f rpi-eeprom-update.patch /root/eeprom/
cp -f rpi-eeprom-control.patch /usr/local/src/
mv -f rpi-eeprom-control.patch /root/eeprom/
cd ~/eeprom
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/rpi-eeprom_${EEPROM_VERSION}.orig.tar.gz
tar xf rpi-eeprom_${EEPROM_VERSION}.orig.tar.gz
tar xf rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
rm -f rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
mkdir -p debian/patches
mv rpi-eeprom-update.patch debian/patches/rpi-eeprom-update.patch 
echo rpi-eeprom-update.patch >> debian/patches/series
mv -f debian rpi-eeprom-${EEPROM_VERSION}/
mv rpi-eeprom-control.patch rpi-eeprom-${EEPROM_VERSION}/
cd rpi-eeprom-${EEPROM_VERSION}
patch -p1 < rpi-eeprom-control.patch
rm -f rpi-eeprom-control.patch
dpkg-buildpackage -us -uc
cd ..
dpkg -i *.deb
cd ..
rm -fdr eeprom
echo Done.
}

bcm_modules(){
echo
echo Updating etc modules.
rm -f /etc/modules
tee /etc/modules <<EOF
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
#bcm2835-v4l2
#i2c-dev

EOF
chown root:root /etc/modules
echo Done.
}

bcm2710_modules(){
echo
echo Updating etc modules.
rm -f /etc/modules
tee /etc/modules <<EOF
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
#bcm2835-v4l2
#i2c-dev
snd_bcm2835

EOF
chown root:root /etc/modules
echo Done.
}

armv8_userland(){
echo
echo Adding raspi userland.
rm -f /etc/profile
mv -f profile /etc/profile
mv rpi-vc.conf /etc/ld.so.conf.d/rpi-vc.conf
chown root:root /etc/profile
chown root:root /etc/ld.so.conf.d/rpi-vc.conf
sleep 1s
mkdir -p /opt
git clone https://github.com/raspberrypi/userland.git
mv -f userland-remove-hi-pi.patch /root/userland/
cd userland
patch -p1 < userland-remove-hi-pi.patch
rm -f userland-remove-hi-pi.patch
./buildme --aarch64
cd ~
rm -f -d -R userland
ldconfig
echo Done.
}

led_switches(){
echo
echo Creating power led switch.
sleep 1s
tee /etc/systemd/system/pwrledoff.service <<EOF
[Unit]
Description=Turn off power led
ConditionPathExists=/usr/local/sbin/pwrledoff
[Service]
Type=forking
ExecStart=/usr/local/sbin/pwrledoff &>/dev/null
[Install]
WantedBy=multi-user.target
EOF

echo
echo Creating activity led switch. 
sleep 1s
tee /etc/systemd/system/actledoff.service <<EOF
[Unit]
Description=Turn off activity led
ConditionPathExists=/usr/local/sbin/actledoff
[Service]
Type=forking
ExecStart=/usr/local/sbin/actledoff &>/dev/null
[Install]
WantedBy=multi-user.target
EOF
}

htop_stable(){
echo
echo Installing htop with cpufreq and thermal support.
sleep 1s
git clone https://github.com/leeadama/htop.git
cd htop
./autogen.sh
./configure --prefix=/usr
make -j4
make install
cd ~
rm -fdr htop
echo Done.
}

htop_unstable(){
echo
echo Installing htop with cpufreq and thermal support.
sleep 1s
git clone https://github.com/leeadama/htop.git
cd htop
./autogen.sh
./configure --prefix=/usr
make -j4 CC=gcc-9
make install
cd ~
rm -fdr htop
echo Done.
}

# PIANOBAR AND BLUETOOTH
piano_bar(){
git clone https://github.com/PromyLOPh/pianobar.git
cd pianobar
make -j4
make install
cd ~
rm -fdr pianobar
}

libao_conf(){
rm -f /etc/libao.conf
tee /etc/libao.conf <<EOF
default_driver=alsa
buffer_time=1300
quiet
EOF
chown root:root /etc/libao.conf
}

stereo_audio(){
rm -f /usr/share/pulseaudio/alsa-mixer/profile-sets/default.conf
mv -f default.conf /usr/share/pulseaudio/alsa-mixer/profile-sets/
chown root:root /usr/share/pulseaudio/alsa-mixer/profile-sets/default.conf
}

sed_configs(){
sed -i '/#Name = BlueZ/a Enable=Source,Sink,Media' /etc/bluetooth/main.conf
sed -i 's/#Class = 0x000100/Class = 0x00041C/g' /etc/bluetooth/main.conf
sed -i 's/#DiscoverableTimeout = 0/DiscoverableTimeout = 0/g' /etc/bluetooth/main.conf
sed -i 's/#PairableTimeout = 0/PairableTimeout = 0/g' /etc/bluetooth/main.conf
sed -i 's/; resample-method = speex-float-1/resample-method = trivial/g' /etc/pulse/daemon.conf
}

pulseaudio_init(){
mv -f pulseaudio.init /etc/init.d/pulseaudio
chmod 755 /etc/init.d/pulseaudio
update-rc.d pulseaudio defaults
}

autopair_service(){
mv -f auto-agent autopair bluezutils.py bluezutils.pyc BtAutoPair.py BtAutoPair.pyc testAutoPair.py /usr/local/bin/
chmod +x /usr/local/bin/auto-agent
chmod +x /usr/local/bin/autopair
chown -R root:root /usr/local/bin/
tee /etc/systemd/system/autopair.service <<EOF
[Unit]
Description=Auto Pair
Requires=bluetooth.service
After=bluetooth.service
Before=rc-local.service
ConditionPathExists=/usr/local/bin/autopair

[Service]
ExecStart=/usr/local/bin/autopair > /dev/null 2>&1
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
systemctl enable autopair
}

bluez_firmware(){
BRPT="rpt7"
echo Building bluez firmware package.
sleep 1s
mkdir -p bluez-firmware
cd bluez-firmware
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/b/bluez-firmware/bluez-firmware_1.2.orig.tar.gz
tar xf bluez-firmware_1.2.orig.tar.gz
cd bluez-firmware-1.2
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/b/bluez-firmware/bluez-firmware_1.2-4+${BRPT}.debian.tar.xz
tar xf bluez-firmware_1.2-4+${BRPT}.debian.tar.xz
rm -f bluez-firmware_1.2-4+${BRPT}.debian.tar.xz
dpkg-buildpackage -us -uc
cd ..
dpkg -i bluez-firmware_*.deb
cd ~
rm -fdR bluez-firmware
}
